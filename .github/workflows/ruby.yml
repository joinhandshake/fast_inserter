name: Ruby

on: push

jobs:
  build-and-test-job:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        ruby-version: ['2.4.0', '2.5.1', '2.6.6', '2.7.2', '3.0.6', 3.1.4', 3.2.2', 'ruby-head']
        database: [sqlite, pg, mysql]
    
    # Postgres has to be explicitly included. The runner environment already has mysql installed by default.
    services:
      postgres:
        # Pin to this commit: version 14.0
        image: postgres@sha256:2b8a60d4ae4b3cf9dc5ae823700f699fdabdb0d03901dd480c9a410ca72c4571
        env:
          # Password is required. Postgres won't start without it.
          POSTGRES_PASSWORD: postgres_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # CAUTION - the DB env var is also used by the test setup code. Don't change the name of it!
      DB: ${{ matrix.database }}
      RV: ${{ matrix.ruby-version }}
      PGPASSWORD: postgres_password

    steps:
      - name: Init
        run: echo "Using Ruby $RV and '$DB' as the database."
      - name: Checkout
        # Pin to this commit: v2
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
      - name: Set up Database
        run: |
          if [ "$DB" = "pg" ]; then psql -h localhost -c 'DROP DATABASE IF EXISTS fast_inserter;' -U postgres; fi
          if [ "$DB" = "pg" ]; then psql -h localhost -c 'create database fast_inserter;' -U postgres; fi
          if [ "$DB" = "mysql" ]; then sudo systemctl start mysql.service; fi
          if [ "$DB" = "mysql" ]; then mysql -e 'create database IF NOT EXISTS fast_inserter;' -uroot -proot; fi
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Run tests
        # The test setup code reads the DB env var to determine which database to use.
        run: bundle exec rake
